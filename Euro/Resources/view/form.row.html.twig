{% trans_default_domain('field.tire.cartype') %}

{% block tire_euro_field_row %}

    {# <label class="form-label">{{ 'label'|trans }}</label> #}
    <label class="form-label">{{ form.vars.label }}</label>


    {% for child in form.children|filter(child => not child.rendered) %}

        <div class="d-flex align-items-center gap-3">

            {% if child.vars.name == 'economy' %}
                <div>
                    <span class="badge bg-warning text-dark">
                         <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                              class="bi bi-fuel-pump-fill" viewBox="0 0 16 16">
                        <path d="M1 2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v8a2 2 0 0 1 2 2v.5a.5.5 0 0 0 1 0V8h-.5a.5.5 0 0 1-.5-.5V4.375a.5.5 0 0 1 .5-.5h1.495c-.011-.476-.053-.894-.201-1.222a.97.97 0 0 0-.394-.458c-.184-.11-.464-.195-.9-.195a.5.5 0 0 1 0-1c.564 0 1.034.11 1.412.336.383.228.634.551.794.907.295.655.294 1.465.294 2.081V7.5a.5.5 0 0 1-.5.5H15v4.5a1.5 1.5 0 0 1-3 0V12a1 1 0 0 0-1-1v4h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1V2Zm2.5 0a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-5a.5.5 0 0 0-.5-.5h-5Z"/>
                    </svg>
                    </span>
                </div>

            {% elseif child.vars.name == 'grip' %}

                <div>
                    <span class="badge bg-primary">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                             class="bi bi-cloud-lightning-rain-fill" viewBox="0 0 16 16">
                        <path d="M2.658 11.026a.5.5 0 0 1 .316.632l-.5 1.5a.5.5 0 1 1-.948-.316l.5-1.5a.5.5 0 0 1 .632-.316zm9.5 0a.5.5 0 0 1 .316.632l-.5 1.5a.5.5 0 0 1-.948-.316l.5-1.5a.5.5 0 0 1 .632-.316zm-7.5 1.5a.5.5 0 0 1 .316.632l-.5 1.5a.5.5 0 1 1-.948-.316l.5-1.5a.5.5 0 0 1 .632-.316zm9.5 0a.5.5 0 0 1 .316.632l-.5 1.5a.5.5 0 0 1-.948-.316l.5-1.5a.5.5 0 0 1 .632-.316zm-7.105-1.25A.5.5 0 0 1 7.5 11h1a.5.5 0 0 1 .474.658l-.28.842H9.5a.5.5 0 0 1 .39.812l-2 2.5a.5.5 0 0 1-.875-.433L7.36 14H6.5a.5.5 0 0 1-.447-.724l1-2zm6.352-7.249a5.001 5.001 0 0 0-9.499-1.004A3.5 3.5 0 1 0 3.5 10H13a3 3 0 0 0 .405-5.973z"/>
                    </svg>
                    </span>
                </div>


            {% elseif child.vars.name == 'sound' %}
                <div>
                    <span class="badge bg-light text-dark">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor"
                             class="bi bi-volume-up-fill" viewBox="0 0 16 16">
                            <path d="M11.536 14.01A8.473 8.473 0 0 0 14.026 8a8.473 8.473 0 0 0-2.49-6.01l-.708.707A7.476 7.476 0 0 1 13.025 8c0 2.071-.84 3.946-2.197 5.303l.708.707z"/>
                            <path d="M10.121 12.596A6.48 6.48 0 0 0 12.025 8a6.48 6.48 0 0 0-1.904-4.596l-.707.707A5.483 5.483 0 0 1 11.025 8a5.483 5.483 0 0 1-1.61 3.89l.706.706z"/>
                            <path d="M8.707 11.182A4.486 4.486 0 0 0 10.025 8a4.486 4.486 0 0 0-1.318-3.182L8 5.525A3.489 3.489 0 0 1 9.025 8 3.49 3.49 0 0 1 8 10.475l.707.707zM6.717 3.55A.5.5 0 0 1 7 4v8a.5.5 0 0 1-.812.39L3.825 10.5H1.5A.5.5 0 0 1 1 10V6a.5.5 0 0 1 .5-.5h2.325l2.363-1.89a.5.5 0 0 1 .529-.06z"/>
                        </svg>
                    </span>
                </div>
            {% endif %}


            {{ form_label(child) }}

        </div>

        <div class="w-50 d-flex align-items-center gap-1 mb-3">
            {% for element in child %}
                <label for="{{ element.vars.id }}" class="d-flex form-control border-light w-auto">
                    {{ form_widget(element, { label: false }) }}
                    <div>{{ element.vars.value }}</div>
                </label>
            {% else %}
                {{ form_widget(child) }}
            {% endfor %}
        </div>

    {% endfor %}


    <script nonce="{{ csp_nonce() }}">

        let economy = document.querySelectorAll('.change-economy');
        let grip = document.querySelectorAll('.change-grip');
        let sound = document.querySelector('.euro-sound');

        economy.forEach(function (economyInput) {

            economyInput.addEventListener('change', function () {
                document.querySelectorAll('.change-economy').forEach(function (economyUncheck) {

                    if (economyInput.value != economyUncheck.value) {
                        economyUncheck.checked = false;
                    } else {

                        let sound = document.querySelector('.euro-sound');

                        /** Если имеется выбранный элемент - выделяем один из элементов Класс сцепления */
                        if (economyUncheck.checked === true) {
                            if (!document.querySelector('.change-grip:checked')) {
                                document.querySelector('.change-grip').checked = true;
                            }

                            sound.setAttribute('required', 'required');  /* Уровень шума обязательный */

                        } else {
                            document.querySelectorAll('.change-grip:checked').forEach(function (gripChecked) {
                                gripChecked.checked = false
                            });

                            sound.removeAttribute('required');
                            sound.value = '';
                        }
                    }
                });


                /* Сбрасываем другие элементы */
                document.querySelectorAll('.change-economy').forEach(function (economyUncheck) {
                    if (economyInput.value != economyUncheck.value) {
                        economyUncheck.checked = false;
                    }
                });

            });
        });


        grip.forEach(function (gripInput) {

            gripInput.addEventListener('change', function () {
                document.querySelectorAll('.change-grip').forEach(function (gripUncheck) {

                    if (gripInput.value != gripUncheck.value) {
                        gripUncheck.checked = false;
                    } else {

                        let sound = document.querySelector('.euro-sound');

                        /** Если имеется выбранный элемент - выделяем один из элементов Класс сцепления */
                        if (gripUncheck.checked === true) {

                            if (!document.querySelector('.change-economy:checked')) {
                                document.querySelector('.change-economy').checked = true;
                            }

                            sound.setAttribute('required', 'required');  /* Уровень шума обязательный */

                        } else {
                            document.querySelectorAll('.change-economy:checked').forEach(function (economyChecked) {
                                economyChecked.checked = false
                            });

                            sound.removeAttribute('required');
                            sound.value = '';
                        }
                    }
                });

                /* Сбрасываем другие элементы */
                document.querySelectorAll('.change-grip').forEach(function (gripUncheck) {
                    if (gripInput.value != gripUncheck.value) {
                        gripUncheck.checked = false;
                    }
                });
            });
        });


        if (sound) {

            setTimeout(function initSound() {

                if (typeof soundValue.debounce === 'function') {

                    sound.addEventListener('input', soundValue.debounce(300));
                    return;
                }
                setTimeout(initSound, 100);

            }, 100);
        }

        function soundValue() {

            let sound = document.querySelector('.euro-sound');

            if (sound.value) {
                if (!document.querySelector('.change-grip:checked')) {
                    document.querySelector('.change-grip').checked = true;
                }

                if (!document.querySelector('.change-economy:checked')) {
                    document.querySelector('.change-economy').checked = true;
                }

                sound.setAttribute('required', 'required');  /* Уровень шума обязательный */
            }
            else
            {
                if (document.querySelector('.change-economy:checked').getAttribute("type") === 'checkbox' ||
                    document.querySelector('.change-economy:checked').getAttribute("type") === 'checkbox') {

                    document.querySelectorAll('.change-economy:checked').forEach(function (economyChecked) {
                        economyChecked.checked = false
                    });

                    document.querySelectorAll('.change-grip:checked').forEach(function (gripChecked) {
                        gripChecked.checked = false
                    });

                    sound.removeAttribute('required');
                }

            }
        }

    </script>


{% endblock %}

